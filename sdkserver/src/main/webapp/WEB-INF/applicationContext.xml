<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:aop="http://www.springframework.org/schema/aop" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-3.2.xsd"
	default-autowire="byName" default-lazy-init="false">

	<!-- 加载配置文件 -->
	<context:property-placeholder location="classpath:*.properties" />

	<!-- 定义受环境影响易变的变量 -->
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<!-- 标准配置 -->
				<value>classpath:jdbc.properties</value>
			</list>
		</property>
	</bean>

	
	<!-- 使用annotation 自动注册bean,并保证@Required,@Autowired的属性被注入 -->
	<context:component-scan base-package="com.u8.server" />
	<context:annotation-config />

	<!-- 数据源配置,使用应用内的DBCP数据库连接池 -->
	<!--<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">-->
		<!--&lt;!&ndash; Connection Info &ndash;&gt;-->
		<!--<property name="driverClassName" value="${jdbc.driver}" />-->
		<!--<property name="url" value="${jdbc.url}" />-->
		<!--<property name="username" value="${jdbc.username}" />-->
		<!--<property name="password" value="${jdbc.password}" />-->

		<!--&lt;!&ndash; Connection Pooling Info &ndash;&gt;-->
		<!--<property name="initialSize" value="5" />-->
		<!--<property name="maxActive" value="500" />-->
		<!--<property name="maxIdle" value="10000" />-->
		<!--<property name="maxWait" value="10000" />-->
		<!--<property name="defaultAutoCommit" value="true" />-->
		<!--<property name="removeAbandoned" value="false"/>-->
		<!--<property name="removeAbandonedTimeout" value="180" />-->
		<!--<property name="logAbandoned" value="true"/>-->
		<!--<property name="validationQuery" value="SELECT 1" />-->
		<!--<property name="testOnBorrow" value="true"/>-->
 	<!--</bean>-->

	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.driver}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />

		<property name="initialPoolSize" value="10" />
		<!--连接空闲时间(秒) -->
		<property name="maxIdleTime" value="300" />
		<property name="maxPoolSize" value="50" />
		<property name="minPoolSize" value="10" />
		<!--获取新连接的等待时间(毫秒)0一直等待 -->
		<property name="checkoutTimeout" value="30000" />
		<!--检测空闲连接的时间间隔(秒) -->
		<property name="idleConnectionTestPeriod" value="150" />
		<!--<property name="testConnectionOnCheckout" value="true" />-->
	</bean>

	<!-- Hibernate配置 -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.connection.release_mode">auto</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
				<!--<prop key="hibernate.current_session_context_class">${hibernate.current_session_context_class}</prop>-->
			</props>
		</property>
		<property name="packagesToScan" value="com.u8.server.data" />
	</bean>

	<!-- 事务管理器配置,单数据源事务 -->
	<bean id="txManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true" />
			<tx:method name="find*" read-only="true" />
			<tx:method name="query*" read-only="true" />
			<tx:method name="is*" read-only="true" />
			<tx:method name="*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>

	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="txManager" proxy-target-class="true"/>

	<aop:config proxy-target-class="true">
		<aop:advisor pointcut="execution(* com.u8.server.service..*Manager.*(..))" advice-ref="txAdvice" />
		<aop:advisor pointcut="execution(* com.u8.server.dao..*Dao.*(..))" advice-ref="txAdvice" />
	</aop:config>




</beans>